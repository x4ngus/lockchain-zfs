name: release

on:
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  debian-package:
    runs-on: ubuntu-rolling
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            libssl-dev \
            libudev-dev \
            libxcb-shape0-dev \
            libxcb-render0-dev \
            libxcb-xfixes0-dev \
            libxi-dev \
            libxkbcommon-dev \
            libx11-dev \
            libgtk-3-dev \
            libsoup-3.0-dev \
            libvulkan1 \
            libdrm-dev \
            zfsutils-linux \
            dracut \
            gpg \
            fakeroot

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Cargo fmt
        run: cargo fmt --all --check

      - name: Run tests
        run: cargo test --workspace --exclude lockchain-ui

      - name: Build release artifacts
        run: cargo build --workspace --release

      - name: Install cargo-deb
        run: cargo install cargo-deb --locked

      - name: Build Debian package
        id: deb
        run: |
          cargo deb --manifest-path packaging/lockchain-deb/Cargo.toml --no-build --target-dir target/debian
          DEB_FILE=$(ls target/debian/*.deb | head -n1)
          echo "deb_file=$DEB_FILE" >> "$GITHUB_OUTPUT"

      - name: Import GPG signing key
        env:
          SIGNING_KEY: ${{ secrets.RELEASE_GPG_KEY }}
        run: |
          if [ -z "$SIGNING_KEY" ]; then
            echo "RELEASE_GPG_KEY secret is required for signing." >&2
            exit 1
          fi
          echo "$SIGNING_KEY" | base64 --decode > signing.key
          gpg --batch --yes --import signing.key
          rm -f signing.key

      - name: Sign package and generate checksums
        id: sign
        env:
          DEB_FILE: ${{ steps.deb.outputs.deb_file }}
          SIGNING_KEY_ID: ${{ secrets.RELEASE_GPG_KEY_ID }}
          SIGNING_KEY_PASSPHRASE: ${{ secrets.RELEASE_GPG_PASSPHRASE }}
        run: |
          if [ -z "$SIGNING_KEY_ID" ] || [ -z "$SIGNING_KEY_PASSPHRASE" ]; then
            echo "Signing secrets RELEASE_GPG_KEY_ID and RELEASE_GPG_PASSPHRASE must be configured." >&2
            exit 1
          fi
          sha256sum "$DEB_FILE" > SHA256SUMS
          gpg --batch --yes --pinentry-mode loopback --passphrase "$SIGNING_KEY_PASSPHRASE" --default-key "$SIGNING_KEY_ID" -a --detach-sign "$DEB_FILE"
          gpg --batch --yes --pinentry-mode loopback --passphrase "$SIGNING_KEY_PASSPHRASE" --default-key "$SIGNING_KEY_ID" -a --detach-sign SHA256SUMS
          echo "checksum_file=SHA256SUMS" >> "$GITHUB_OUTPUT"
          echo "deb_sig=${DEB_FILE}.asc" >> "$GITHUB_OUTPUT"
          echo "checksum_sig=SHA256SUMS.asc" >> "$GITHUB_OUTPUT"

      - name: Upload workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lockchain-zfs-release
          path: |
            ${{ steps.deb.outputs.deb_file }}
            ${{ steps.sign.outputs.deb_sig }}
            ${{ steps.sign.outputs.checksum_file }}
            ${{ steps.sign.outputs.checksum_sig }}

      - name: Publish assets to GitHub Release
        if: github.event_name == 'release' && github.event.action == 'published'
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ steps.deb.outputs.deb_file }}
            ${{ steps.sign.outputs.deb_sig }}
            ${{ steps.sign.outputs.checksum_file }}
            ${{ steps.sign.outputs.checksum_sig }}
